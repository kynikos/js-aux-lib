// Generated by CoffeeScript 1.10.0
module.exports.getUrlLocation = function(url) {
  var link;
  link = document.createElement('a');
  link.href = url;
  return link;
};

module.exports.getURIParameters = function(uri) {
  var i, len, par, qarray, qdict, qstring, s;
  if (uri) {
    qstring = module.exports.getUrlLocation(uri).search;
  } else {
    qstring = location.search;
  }
  qarray = qstring.substr(1).split('&');
  qdict = new Object();
  s = new Array();
  for (i = 0, len = qarray.length; i < len; i++) {
    par = qarray[i];
    s = par.split('=');
    qdict[s[0]] = s[1];
  }
  return qdict;
};

module.exports.getURIParameter = function(uri, name) {
  return module.exports.getURIParameters(uri)[name];
};

module.exports.sendGetAsyncRequest = function(url, call) {
  var req;
  req = new XMLHttpRequest();
  req.onreadystatechange = function() {
    if (req.readyState === 4 && req.status === 200) {
      return call(req);
    }
  };
  req.open("GET", url, true);
  return req.send();
};

module.exports.sendGetSyncRequest = function(url) {
  var req;
  req = new XMLHttpRequest();
  req.open("GET", url, false);
  req.send();
  return req;
};

module.exports.sendPostAsyncRequest = function(url, call, query, header, headervalue) {
  var req;
  req = new XMLHttpRequest();
  req.onreadystatechange = function() {
    if (req.readyState === 4 && req.status === 200) {
      return call(req);
    }
  };
  req.open("POST", url, true);
  if (header && headervalue) {
    req.setRequestHeader(header, headervalue);
  }
  return req.send(query);
};

module.exports.sendPostSyncRequest = function(url, query, header, headervalue) {
  var req;
  req = new XMLHttpRequest();
  req.open("POST", url, false);
  if (header && headervalue) {
    req.setRequestHeader(header, headervalue);
  }
  req.send(query);
  return req;
};
