// Generated by CoffeeScript 2.1.1
// lib.cs.misc - Check the status of code repositories under a root directory.
// Copyright (C) 2016 Dario Giovannetti <dev@dariogiovannetti.net>

// This file is part of lib.cs.misc.

// lib.cs.misc is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.

// lib.cs.misc is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.

// You should have received a copy of the GNU General Public License
// along with lib.cs.misc.  If not, see <http://www.gnu.org/licenses/>.
var TableSettings, TableSettingsNoSpan, TableSettingsRowspan;

if ((typeof $ === "undefined" || $ === null) && (typeof jQuery === "undefined" || jQuery === null)) {
  window.$ = window.jQuery = require('jquery');
}

TableSettings = class TableSettings {
  constructor(table) {
    var hideSettings, self, showSettings;
    this.table = table;
    self = this;
    showSettings = function(event) {
      var form, settings;
      settings = $(this).closest('div.settings');
      form = settings.children('form');
      if (form.length) {
        form.show();
      } else {
        form = $('<form>').appendTo(settings);
        self.table.find('th').each(function(index) {
          var th;
          th = $(this);
          return form.append($('<label>').text(th.text()).prepend($('<input type="checkbox">').prop('checked', true).change(function() {
            if ($(this)[0].checked) {
              return self._showField(index);
            } else {
              return self._hideField(index);
            }
          }))).append('<br>');
        });
      }
      $(this).off('click', showSettings).on('click', hideSettings);
      return false;
    };
    hideSettings = function(event) {
      // Only hide the form, don't remove it, or the checkboxes will
      // have to be reinitialized to a checked/unchecked status based on
      // the visibility of each field every time the settings are shown
      // again
      $(this).closest('div.settings').children('form').hide();
      $(this).off('click', hideSettings).on('click', showSettings);
      return false;
    };
    $('<div>').addClass('settings').append($('<a>').attr('href', '#').text('Settings').click(showSettings)).insertBefore(this.table);
  }

};

TableSettingsNoSpan = class TableSettingsNoSpan extends TableSettings {
  _showField(index) {
    var filter;
    filter = ':nth-of-type(' + (index + 1) + ')';
    return this.table.find('th' + filter + ', td' + filter).show();
  }

  _hideField(index) {
    var filter;
    filter = ':nth-of-type(' + (index + 1) + ')';
    return this.table.find('th' + filter + ', td' + filter).hide();
  }

};

TableSettingsRowspan = class TableSettingsRowspan extends TableSettings {
  _showField(index) {
    return this.table.find('.col' + index).show();
  }

  _hideField(index) {
    return this.table.find('.col' + index).hide();
  }

};

$.fn.addTableSettings = function() {
  return this.each(function() {
    if ($(this).hasClass('hideable-fields-nospan')) {
      new TableSettingsNoSpan($(this));
    } else if ($(this).hasClass('hideable-fields-rowspan')) {
      new TableSettingsRowspan($(this));
    }
    return $(this);
  });
};

$.fn.prependTableDataRows = function(...rows) {
  return this.each(function() {
    var cell, i, j, len, len1, row, tr;
    // TODO: Check if this is a table, thead, tbody or tfoot?
    for (i = 0, len = rows.length; i < len; i++) {
      row = rows[i];
      tr = $('<tr>');
      for (j = 0, len1 = row.length; j < len1; j++) {
        cell = row[j];
        tr.append($('<td>').append(cell));
      }
      $(this).prepend(tr);
    }
    return $(this);
  });
};

$.fn.appendTableDataRows = function(...rows) {
  return this.each(function() {
    var cell, i, j, len, len1, row, tr;
    // TODO: Check if this is a table, thead, tbody or tfoot?
    for (i = 0, len = rows.length; i < len; i++) {
      row = rows[i];
      tr = $('<tr>');
      for (j = 0, len1 = row.length; j < len1; j++) {
        cell = row[j];
        tr.append($('<td>').append(cell));
      }
      $(this).append(tr);
    }
    return $(this);
  });
};
